{"version":3,"sources":["redux/slices/auth/auth-operations.js","redux/slices/auth/auth-slice.js","redux/slices/contacts/contacts-operations.js","redux/slices/contacts/contacts-slice.js","redux/store/store.js","redux/slices/auth/auth-selectors.js","components/Rutes/PrivatRoute.js","components/Rutes/PublicRoute.js","images/city-bcg.jpg","components/Home/Home.style.js","utils/styleHooks/buttonsHook.js","utils/BlackOut.js","components/Home/Home.js","components/ContactForm/ContactForm.style.js","utils/themes/inputFormTheme.js","utils/styleHooks/hederHook.js","utils/patternsForm.js","components/ContactForm/ContactForm.js","redux/slices/contacts/contacts-selectors.js","components/ContactList/ContactList.style.js","views/ContactsListView/ContactListView.style.js","utils/styleHooks/cardHook.js","views/ContactsListView/ContactListView.js","components/ContactList/ContactList.js","components/Contacts/Contacts.style.js","components/Contacts/Contacts.js","views/PrivatNavView/PrivatNavView.style.js","views/PrivatNavView/PrivatNavView.js","views/PublicNavView/PublicNavView.style.js","views/PublicNavView/PublicNavView.js","utils/styleHooks/navHooks.js","components/NavBar/NavBar.js","components/LoginForm/LoginForm.style.js","views/AlertMessage/AllertMessage.style.js","views/AlertMessage/AllertMessage.js","components/LoginForm/LoginForm.js","components/RegistrationForm/RegistrationForm.style.js","components/RegistrationForm/RegistrationForm.js","App.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","logIn","operations","logOut","getCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","get","authSlice","createSlice","name","initialState","user","email","loggedStatus","cuurrentUserStatus","extraReducers","authOperations","fulfilled","action","payload","pending","rejected","getContacts","addContact","delContact","id","delete","contactsSlice","contacts","number","status","err","reducers","clearContacts","contactsOperations","actions","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","authSelectors","getUsername","isCurrentUser","PrivateRoute","children","redirectTo","routeProps","isloggedStatus","useSelector","to","PublicRoute","restricted","shouldRedirect","HomeContainer","styled","div","bcgImage","NavButton","span","useButtonStyle","makeStyles","buttonStyle","boxShadow","color","height","padding","border","homeButtonStyle","submitButton","delButton","borderColor","BlackOut","Home","useState","isFadeIn","setIsFadeIn","isFadeOut","setIsFadeOut","isLoadedPage","setIsLoadedPage","history","useHistory","goToTimeout","target","textContent","setTimeout","push","useEffect","loadPage","clearTimeout","className","onLoad","console","log","Button","onClick","FormPhoneBookContainer","FormPhoneBook","form","costomTheme","createTheme","palette","primary","main","red","overrides","MuiFormControl","root","MuiFormLabel","MuiInputBase","input","MuiOutlinedInput","notchedOutline","useHeaderStyle","headerStyle","fontSize","fontWeight","marginTop","letterSpacing","marginLeft","patterns","ContactForm","nameInpt","setNameInpt","numberInpt","setNumberInpt","dispatch","useDispatch","onChangeHendle","value","Typography","component","onSubmit","eve","preventDefault","ThemeProvider","theme","TextField","inputProps","pattern","title","label","type","variant","onChange","fullWidth","contactsSelectors","contactsLodedStatus","contactsData","ContactListSection","ul","LabelContactsText","AccentText","FilterForm","ContactListItem","li","ContactTextContainer","useCardStyles","display","justifyContent","maxWidth","backgroundColor","paddingBottom","container","textAlign","width","overflow","marginBottom","ContactListView","onDelete","Card","CardContent","size","ContactList","isLoadedContacts","contactsList","isShowContacts","setIsShowContacts","showFilteredList","setShowFilteredList","filter","setFilter","filteredArr","setFilteredArr","onDeleteHeandler","parentElement","toString","contact","indexOf","toLowerCase","parseInt","map","contactItem","ContactsMainSection","Contacts","NavBarContainer","nav","NavBarLink","NavLink","NavItemContainer","UserName","p","PrivatNavView","userStatus","toUpperCase","PublicNavView","exact","useNavStyle","flexGrow","appBar","NavBar","isPrivat","setIsPrivat","isPublic","setIsPublic","AppBar","position","Toolbar","LoginFormSection","LoginFormContainer","AlertContainer","AlertMessageText","AllertMessage","message","LoginForm","emailInput","setEmailInput","passwordInput","setPasswordInput","isLogged","onChangengeHeandler","password","RegFormContainer","ReginFormSection","RegistrationForm","nameInput","setNameInput","App","path","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.9f11bb4b.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"http://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = createAsyncThunk(\"auth/register\", async (credentials) => {\n  const { data } = await axios.post(\"/users/signup\", credentials);\n  token.set(data.token);\n  return data;\n});\n\nconst logIn = createAsyncThunk(\"auth/login\", async (credentials) => {\n  const { data } = await axios.post(\"/users/login\", credentials);\n  token.set(data.token);\n  return data;\n});\n\nconst logOut = createAsyncThunk(\"auth/logout\", async () => {\n  await axios.post(\"/users/logout\");\n  token.unset();\n});\n\nconst getCurrentUser = createAsyncThunk(\"auth/refresh\", async (_, thunkAPI) => {\n  const state = thunkAPI.getState();\n  const persistedToken = state.auth.token;\n\n  if (persistedToken === null) {\n    return thunkAPI.rejectWithValue();\n  }\n\n  token.set(persistedToken);\n  const { data } = await axios.get(\"/users/current\");\n  return data;\n});\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  getCurrentUser,\n};\nexport default operations;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport authOperations from \"redux/slices/auth/auth-operations\";\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  loggedStatus: \"idle\",\n  cuurrentUserStatus: null,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled]: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.loggedStatus = \"loaded\";\n      state.cuurrentUserStatus = \"loaded\";\n    },\n    [authOperations.register.pending]: (state, _) => {\n      state.loggedStatus = \"pending\";\n    },\n    [authOperations.register.rejected]: (state, _) => {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.loggedStatus = \"rejected\";\n      state.cuurrentUserStatus = \"rejected\";\n    },\n\n    [authOperations.logIn.fulfilled]: (state, action) => {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.loggedStatus = \"loaded\";\n      state.cuurrentUserStatus = \"loaded\";\n    },\n    [authOperations.logIn.pending]: (state, _) => {\n      state.loggedStatus = \"pending\";\n    },\n    [authOperations.logIn.rejected]: (state, _) => {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.loggedStatus = \"rejected\";\n    },\n\n    [authOperations.logOut.fulfilled]: (state, _) => {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.loggedStatus = \"idle\";\n      state.cuurrentUserStatus = \"loggedOut\";\n    },\n\n    [authOperations.getCurrentUser.fulfilled]: (state, action) => {\n      state.user = action.payload;\n      state.loggedStatus = \"loaded\";\n      state.cuurrentUserStatus = \"loaded\";\n    },\n    [authOperations.getCurrentUser.pending]: (state, _) => {\n      state.cuurrentUserStatus = \"pending\";\n    },\n    [authOperations.getCurrentUser.rejected]: (state, _) => {\n      state.cuurrentUserStatus = \"rejected\";\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst getContacts = createAsyncThunk(\"contacts/get\", async () => {\n  const { data } = await axios.get(\"/contacts\");\n  return data;\n});\n\nconst addContact = createAsyncThunk(\"contacts/add\", async (credentials) => {\n  const { data } = await axios.post(\"/contacts\", credentials);\n  return data;\n});\n\nconst delContact = createAsyncThunk(\"contacts/del\", async (id) => {\n  const { data } = await axios.delete(`/contacts/${id}`);\n  return data;\n});\n\nconst operations = {\n  getContacts,\n  addContact,\n  delContact,\n};\nexport default operations;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport contactsOperations from \"redux/slices/contacts/contacts-operations\";\n\nconst initialState = {\n  contacts: { name: null, number: null },\n  status: \"idle\",\n  err: null,\n};\n\nconst contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState,\n  reducers: {\n    clearContacts: (state) => {\n      state.contacts = { name: null, number: null };\n      state.status = \"idle\";\n      state.err = null;\n    },\n  },\n  extraReducers: {\n    [contactsOperations.getContacts.fulfilled]: (state, action) => {\n      state.contacts = action.payload;\n      state.status = \"fulfilled\";\n      state.err = null;\n    },\n    [contactsOperations.getContacts.pending]: (state) => {\n      state.status = \"pending\";\n    },\n    [contactsOperations.getContacts.rejected]: (state) => {\n      state.status = null;\n      state.err = \"ERROR\";\n    },\n\n    [contactsOperations.addContact.fulfilled]: (state) => {\n      state.status = \"changed\";\n      state.err = null;\n    },\n    [contactsOperations.addContact.pending]: (state) => {\n      state.status = \"pending\";\n    },\n    [contactsOperations.addContact.rejected]: (state) => {\n      state.status = null;\n      state.err = \"ERROR\";\n    },\n\n    [contactsOperations.delContact.fulfilled]: (state) => {\n      state.status = \"changed\";\n      state.err = null;\n    },\n    [contactsOperations.delContact.pending]: (state) => {\n      state.status = \"pending\";\n    },\n    [contactsOperations.delContact.rejected]: (state) => {\n      state.status = null;\n      state.err = \"ERROR\";\n    },\n  },\n});\n\nexport const { clearContacts } = contactsSlice.actions;\nexport default contactsSlice.reducer;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport authReducer from \"redux/slices/auth/auth-slice\";\nimport contactsReducer from \"redux/slices/contacts/contacts-slice\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","const loggedStatus = (state) => state.auth.loggedStatus;\n\nconst getUsername = (state) => state.auth.user.name;\n\nconst isCurrentUser = (state) => state.auth.cuurrentUserStatus;\n\nconst authSelectors = {\n  loggedStatus,\n  getUsername,\n  isCurrentUser,\n};\nexport default authSelectors;\n","import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport authSelectors from \"redux/slices/auth/auth-selectors\";\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = \"/\",\n  ...routeProps\n}) {\n  const isloggedStatus = useSelector(authSelectors.loggedStatus);\n  return (\n    <Route {...routeProps}>\n      {isloggedStatus === \"loaded\" ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport authSelectors from \"redux/slices/auth/auth-selectors\";\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = \"/\",\n  ...routeProps\n}) {\n  const isloggedStatus = useSelector(authSelectors.loggedStatus);\n  const shouldRedirect = isloggedStatus === \"loaded\" && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/city-bcg.360acde0.jpg\";","import styled from \"@emotion/styled\";\nimport bcgImage from \"images/city-bcg.jpg\";\n\nexport const HomeContainer = styled.div`\n  &.main-container {\n    position: absolute;\n    top: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100vh;\n    background-image: linear-gradient(\n        0deg,\n        rgba(0, 0, 0, 0.5),\n        rgba(0, 0, 0, 0.5)\n      ),\n      url(${bcgImage});\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n  }\n  &.buttons-container {\n    display: flex;\n  }\n  &.buttons {\n    &:not(:last-child) {\n      margin-right: 100px;\n    }\n  }\n`;\n\nexport const NavButton = styled.span`\n  text-decoration: none;\n  color: #ffffff;\n  font-size: 50px;\n  font-weight: 800;\n`;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useButtonStyle = makeStyles({\n  buttonStyle: {\n    boxShadow: \"0 3px 5px 2px rgba(255, 255, 255, .3)\",\n    color: \"white\",\n    height: 48,\n    padding: \"10px 30px\",\n    border: \"2px solid white\",\n  },\n  homeButtonStyle: {\n    boxShadow: \"0 3px 5px 2px rgba(255, 255, 255, .3)\",\n    color: \"white\",\n    height: 48,\n    padding: \"40px 30px\",\n    border: \"2px solid white\",\n  },\n  submitButton: {\n    color: \"white\",\n    height: 48,\n    padding: \"10px 30px\",\n    border: \"2px solid white\",\n  },\n  delButton: {\n    color: \"rgba(255, 255, 255, 0.53)\",\n    borderColor: \"rgba(255, 255, 255, 0.53)\",\n  },\n});\n","import styled from \"@emotion/styled\";\n\nexport const BlackOut = styled.div`\n  &.black-exit {\n    opacity: 0;\n    top: 0;\n    position: absolute;\n    z-index: 999;\n    width: 100%;\n    height: 0;\n    background-color: #000000;\n\n    transition: opacity 1s;\n  }\n  &.active {\n    opacity: 1;\n    height: 100vh;\n  }\n  &.black-enter {\n    opacity: 1;\n    top: 0;\n    position: absolute;\n    z-index: 999;\n    width: 100%;\n    height: 100vh;\n    background-color: #000000;\n\n    transition: opacity 1s;\n  }\n  &.unactive {\n    opacity: 0;\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { HomeContainer, NavButton } from \"components/Home/Home.style\";\n\nimport Button from \"@material-ui/core/Button\";\n\nimport { useButtonStyle } from \"utils/styleHooks/buttonsHook\";\nimport { BlackOut } from \"utils/BlackOut\";\n\nexport function Home() {\n  const [isFadeIn, setIsFadeIn] = useState(false);\n  const [isFadeOut, setIsFadeOut] = useState(true);\n  const [isLoadedPage, setIsLoadedPage] = useState(true);\n  const { homeButtonStyle } = useButtonStyle();\n  let history = useHistory();\n\n  const goToTimeout = ({ target }) => {\n    setIsFadeIn(true);\n    switch (target.textContent) {\n      case \"LOGIN\":\n        return setTimeout(() => {\n          history.push(\"/login\");\n        }, 1000);\n      case \"SING UP\":\n        return setTimeout(() => {\n          history.push(\"/registration\");\n        }, 1000);\n      default:\n        return;\n    }\n  };\n\n  useEffect(() => {\n    if (isLoadedPage) {\n      setIsFadeOut(false);\n      let loadPage = setTimeout(() => {\n        setIsLoadedPage(false);\n      }, 1000);\n      return () => {\n        clearTimeout(loadPage);\n      };\n    }\n  }, [isLoadedPage]);\n\n  return (\n    <>\n      {isLoadedPage && (\n        <BlackOut\n          className={isFadeOut ? \"black-enter\" : \"black-enter unactive\"}\n        />\n      )}\n      <BlackOut className={isFadeIn ? \"black-exit active\" : \"black-exit\"} />\n      <HomeContainer\n        className=\"main-container\"\n        onLoad={() => console.log(\"object\")}\n      >\n        <HomeContainer className=\"buttons-container\">\n          <HomeContainer className=\"buttons\">\n            <Button className={homeButtonStyle} onClick={goToTimeout}>\n              <NavButton>LOGIN</NavButton>\n            </Button>\n          </HomeContainer>\n          <HomeContainer className=\"buttons\">\n            <Button className={homeButtonStyle} onClick={goToTimeout}>\n              <NavButton>SING UP</NavButton>\n            </Button>\n          </HomeContainer>\n        </HomeContainer>\n      </HomeContainer>\n    </>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const FormPhoneBookContainer = styled.div`\n  &.phonebook-input-container {\n    width: 300px;\n    &:not(:last-child) {\n      margin-bottom: 30px;\n    }\n  }\n`;\n\nexport const FormPhoneBook = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 500px;\n  padding-top: 30px;\n`;\n","import { createTheme } from \"@material-ui/core/styles\";\nimport red from \"@material-ui/core/colors/red\";\n\nexport const costomTheme = createTheme({\n  palette: {\n    primary: {\n      main: red[50],\n    },\n  },\n  overrides: {\n    MuiFormControl: {\n      root: {\n        borderColor: \"rgba(255, 255, 255, 0.53)\",\n      },\n    },\n    MuiFormLabel: {\n      root: {\n        color: \"rgba(255, 255, 255, 0.53)\",\n      },\n    },\n    MuiInputBase: {\n      input: {\n        color: \"red\",\n      },\n    },\n    MuiOutlinedInput: {\n      notchedOutline: {\n        borderColor: \"rgba(255, 255, 255, 0.53)\",\n      },\n    },\n  },\n});\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useHeaderStyle = makeStyles({\n  headerStyle: {\n    color: \"white\",\n    padding: \"10px 30px\",\n    fontSize: \"40px\",\n    fontWeight: \"500\",\n    marginTop: \"30px\",\n    letterSpacing: \"15px\",\n    marginLeft: \"15px\",\n    boxShadow: \"0 0 10px rgba(0,0,0,0.5)\",\n  },\n});\n","export const patterns = {\n  namePattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n  nameTitle:\n    \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\n  numberPattern:\n    \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n  numberTitle:\n    \"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\n};\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  FormPhoneBookContainer,\n  FormPhoneBook,\n} from \"components/ContactForm/ContactForm.style\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { costomTheme } from \"utils/themes/inputFormTheme\";\nimport { useButtonStyle } from \"utils/styleHooks/buttonsHook\";\nimport { Typography } from \"@material-ui/core\";\nimport { useHeaderStyle } from \"utils/styleHooks/hederHook\";\n\nimport { patterns } from \"utils/patternsForm\";\n\nimport contactsOperations from \"redux/slices/contacts/contacts-operations\";\n\nexport function ContactForm() {\n  const [nameInpt, setNameInpt] = useState(\"\");\n  const [numberInpt, setNumberInpt] = useState(\"\");\n  const { submitButton } = useButtonStyle();\n  const { headerStyle } = useHeaderStyle();\n  const dispatch = useDispatch();\n\n  const onChangeHendle = ({ target }) => {\n    switch (target.name) {\n      case \"name\":\n        return setNameInpt(target.value);\n      case \"number\":\n        return setNumberInpt(target.value);\n      default:\n        return;\n    }\n  };\n\n  const onSubmitHeandler = (eve) => {\n    eve.preventDefault();\n    dispatch(\n      contactsOperations.addContact({\n        name: nameInpt,\n        number: numberInpt,\n      })\n    );\n    setNameInpt(\"\");\n    setNumberInpt(\"\");\n  };\n\n  return (\n    <>\n      <Typography className={headerStyle} component=\"p\">\n        PHONEBOOK\n      </Typography>\n      <FormPhoneBook onSubmit={onSubmitHeandler}>\n        <FormPhoneBookContainer className=\"phonebook-input-container\">\n          <ThemeProvider theme={costomTheme}>\n            <TextField\n              inputProps={{\n                pattern: patterns.namePattern,\n                title: patterns.nameTitle,\n              }}\n              name=\"name\"\n              label=\"NAME\"\n              type=\"text\"\n              variant=\"outlined\"\n              value={nameInpt}\n              onChange={onChangeHendle}\n              fullWidth\n            />\n          </ThemeProvider>\n        </FormPhoneBookContainer>\n        <FormPhoneBookContainer className=\"phonebook-input-container\">\n          <ThemeProvider theme={costomTheme}>\n            <TextField\n              inputProps={{\n                pattern: patterns.numberPattern,\n                title: patterns.numberTitle,\n              }}\n              name=\"number\"\n              label=\"NUMBER\"\n              type=\"text\"\n              variant=\"outlined\"\n              value={numberInpt}\n              onChange={onChangeHendle}\n              fullWidth\n            />\n          </ThemeProvider>\n        </FormPhoneBookContainer>\n        <FormPhoneBookContainer className=\"phonebook-button-container\">\n          <Button type=\"submit\" className={submitButton} variant=\"outlined\">\n            Confirm\n          </Button>\n        </FormPhoneBookContainer>\n      </FormPhoneBook>\n    </>\n  );\n}\n","const contactsLodedStatus = (state) => state.contacts.status;\n\nconst contactsData = (state) => state.contacts.contacts;\n\nconst contactsSelectors = {\n  contactsLodedStatus,\n  contactsData,\n};\n\nexport default contactsSelectors;\n","import styled from \"@emotion/styled\";\n\nexport const ContactListSection = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  list-style: none;\n  padding: 0;\n  width: 760px;\n`;\n\nexport const LabelContactsText = styled.span`\n  display: flex;\n  margin-top: 10px;\n  color: rgba(250, 250, 250, 0.5);\n  letter-spacing: 4px;\n  justify-content: center;\n`;\n\nexport const AccentText = styled.span`\n  font-weight: 600;\n  color: rgb(250, 250, 250);\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  padding-right: 2px;\n  padding-left: 2px;\n`;\n\nexport const FilterForm = styled.div`\n  &.filter-input-container {\n    margin-top: 30px;\n  }\n`;\n","import styled from \"@emotion/styled\";\n\nexport const ContactListItem = styled.li`\n  text-transform: capitalize;\n  &:nth-of-type(odd) {\n    margin-right: 20px;\n  }\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const ContactTextContainer = styled.div`\n  width: fit-content;\n  margin-left: auto;\n  margin-right: 0;\n`;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useCardStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    maxWidth: 275,\n    backgroundColor: \"#212121\",\n    padding: \"10px\",\n    boxShadow: \"0 0 10px rgba(0,0,0,0.5)\",\n    \"& :last-child\": {\n      paddingBottom: 0,\n    },\n  },\n  container: {\n    padding: \"0\",\n  },\n  title: {\n    fontSize: \"14px\",\n    color: \"#ffffff\",\n    textAlign: \"center\",\n    width: \"253px\",\n    overflow: \"hidden\",\n    \"&:nth-child(2n)\": {\n      color: \"#ff8989\",\n    },\n    \"&:not(:last-child)\": {\n      marginBottom: \"5px\",\n    },\n  },\n});\n","import {\n  ContactListItem,\n  ContactTextContainer,\n} from \"views/ContactsListView/ContactListView.style\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { useButtonStyle } from \"utils/styleHooks/buttonsHook\";\nimport { useCardStyles } from \"utils/styleHooks/cardHook\";\n\nexport function ContactListView({ data, onDelete }) {\n  const { id, name, number } = data;\n  const { root, container, title } = useCardStyles();\n  const { delButton } = useButtonStyle();\n\n  return (\n    <ContactListItem key={id}>\n      <Card className={root} variant=\"outlined\">\n        <CardContent className={container}>\n          <Typography className={title} color=\"textSecondary\">\n            {name}\n          </Typography>\n          <Typography className={title} color=\"textSecondary\">\n            {number}\n          </Typography>\n          <ContactTextContainer>\n            <Button\n              id={id}\n              onClick={onDelete}\n              className={delButton}\n              size=\"small\"\n              type=\"submit\"\n              variant=\"outlined\"\n            >\n              DELETE\n            </Button>\n          </ContactTextContainer>\n        </CardContent>\n      </Card>\n    </ContactListItem>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport contactsSelectors from \"redux/slices/contacts/contacts-selectors\";\nimport contactsOperations from \"redux/slices/contacts/contacts-operations\";\n\nimport {\n  LabelContactsText,\n  AccentText,\n  FilterForm,\n  ContactListSection,\n} from \"components/ContactList/ContactList.style\";\nimport { ContactListView } from \"views/ContactsListView/ContactListView\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport { Typography } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { costomTheme } from \"utils/themes/inputFormTheme\";\nimport { useHeaderStyle } from \"utils/styleHooks/hederHook\";\n\nexport function ContactList() {\n  const isLoadedContacts = useSelector(contactsSelectors.contactsLodedStatus);\n  const contactsList = useSelector(contactsSelectors.contactsData);\n  const [isShowContacts, setIsShowContacts] = useState(false);\n  const [showFilteredList, setShowFilteredList] = useState(false);\n  const [filter, setFilter] = useState(\"\");\n  const [filteredArr, setFilteredArr] = useState([]);\n  const { headerStyle } = useHeaderStyle();\n\n  const dispatch = useDispatch();\n\n  const onFilterChange = ({ target }) => {\n    setFilter(target.value);\n  };\n\n  const onDeleteHeandler = ({ target }) => {\n    dispatch(contactsOperations.delContact(target.parentElement.id));\n  };\n\n  useEffect(() => {\n    if (filter) {\n      if (toString(filter)) {\n        setFilteredArr([\n          ...contactsList.filter((contact) => {\n            return contact.name.indexOf(filter.toLowerCase()) > -1;\n          }),\n        ]);\n      }\n      if (parseInt(filter)) {\n        setFilteredArr([\n          ...contactsList.filter((contact) => {\n            return contact.number.indexOf(filter) > -1;\n          }),\n        ]);\n      }\n    } else {\n      setFilteredArr([]);\n    }\n  }, [contactsList, filter]);\n\n  useEffect(() => {\n    if (isLoadedContacts === \"fulfilled\") {\n      setIsShowContacts(true);\n    }\n  }, [contactsList, isLoadedContacts]);\n\n  useEffect(() => {\n    if (isLoadedContacts === \"changed\") {\n      dispatch(contactsOperations.getContacts());\n    }\n  }, [dispatch, isLoadedContacts]);\n\n  useEffect(() => {\n    if (filter) {\n      setIsShowContacts(false);\n      setShowFilteredList(true);\n    } else {\n      setShowFilteredList(false);\n      if (isLoadedContacts === \"fulfilled\") {\n        setIsShowContacts(true);\n      }\n    }\n  }, [filter, isLoadedContacts]);\n\n  return (\n    <>\n      <Typography className={headerStyle} component=\"p\">\n        CONTACTS\n      </Typography>\n      <LabelContactsText>\n        FIND CONTACTS BY USING <br />\n        <AccentText>NAME</AccentText> OR <AccentText>NUMBER</AccentText>\n      </LabelContactsText>\n\n      <FilterForm className=\"filter-input-container\">\n        <ThemeProvider theme={costomTheme}>\n          <TextField\n            name=\"name\"\n            label=\"NUME OR NUMBER\"\n            type=\"text\"\n            variant=\"outlined\"\n            value={filter}\n            onChange={onFilterChange}\n            fullWidth\n          />\n        </ThemeProvider>\n      </FilterForm>\n\n      <ContactListSection>\n        {isShowContacts &&\n          contactsList.map((contactItem) => (\n            <ContactListView\n              key={contactItem.id}\n              data={contactItem}\n              onDelete={onDeleteHeandler}\n            />\n          ))}\n        {showFilteredList &&\n          filteredArr.map((contactItem) => (\n            <ContactListView\n              key={contactItem.id}\n              data={contactItem}\n              onDelete={onDeleteHeandler}\n            />\n          ))}\n      </ContactListSection>\n    </>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const ContactsMainSection = styled.div`\n  position: static;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: calc(100vh - 70px);\n  background-color: #212121;\n  padding-left: 150px;\n  padding-right: 150px;\n  padding-bottom: 20px;\n`;\n","import { useState, useEffect } from \"react\";\nimport { BlackOut } from \"utils/BlackOut\";\n\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { ContactsMainSection } from \"components/Contacts/Contacts.style\";\n\nexport function Contacts() {\n  const [isFadeOut, setIsFadeOut] = useState(true);\n  const [isLoadedPage, setIsLoadedPage] = useState(true);\n\n  useEffect(() => {\n    if (isLoadedPage) {\n      setIsFadeOut(false);\n      let loadPage = setTimeout(() => {\n        setIsLoadedPage(false);\n      }, 950);\n      return () => {\n        clearTimeout(loadPage);\n      };\n    }\n  }, [isLoadedPage]);\n\n  return (\n    <>\n      {isLoadedPage && (\n        <BlackOut\n          className={isFadeOut ? \"black-enter\" : \"black-enter unactive\"}\n        />\n      )}\n      <ContactsMainSection>\n        <ContactForm />\n        <ContactList />\n      </ContactsMainSection>\n    </>\n  );\n}\n","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const NavBarContainer = styled.nav`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: static;\n  width: 100%;\n  height: 70px;\n`;\n\nexport const NavBarLink = styled(NavLink)`\n  text-decoration: none;\n  &.active {\n    color: red;\n  }\n`;\n\nexport const NavItemContainer = styled.div`\n  display: flex;\n  align-items: center;\n  &.contact-nav-link {\n    margin-left: 150px;\n    margin-right: auto;\n  }\n  &.user-nav-link {\n    margin-right: 150px;\n    margin-left: auto;\n  }\n`;\n\nexport const UserName = styled.p`\n  margin-right: 15px;\n`;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport authOperations from \"redux/slices/auth/auth-operations\";\nimport authSelectors from \"redux/slices/auth/auth-selectors\";\nimport contactsOperations from \"redux/slices/contacts/contacts-operations\";\nimport { clearContacts } from \"redux/slices/contacts/contacts-slice\";\n\nimport {\n  NavBarContainer,\n  NavItemContainer,\n  NavBarLink,\n  UserName,\n} from \"views/PrivatNavView/PrivatNavView.style\";\n\nimport Button from \"@material-ui/core/Button\";\nimport { useButtonStyle } from \"utils/styleHooks/buttonsHook\";\n\nexport function PrivatNavView() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n  const userStatus = useSelector(authSelectors.isCurrentUser);\n  const { buttonStyle } = useButtonStyle();\n\n  const onLogOutHeandler = () => {\n    dispatch(authOperations.logOut());\n  };\n\n  const getContacts = () => {\n    dispatch(contactsOperations.getContacts());\n  };\n\n  useEffect(() => {\n    if (userStatus === \"loggedOut\") {\n      dispatch(clearContacts());\n    }\n  }, [dispatch, userStatus]);\n\n  useEffect(() => {\n    dispatch(contactsOperations.getContacts());\n  }, [dispatch]);\n\n  return (\n    <NavBarContainer>\n      <NavItemContainer className=\"contact-nav-link\">\n        <NavBarLink to=\"/contacts\" onClick={getContacts}>\n          CONTACTS\n        </NavBarLink>\n      </NavItemContainer>\n      <NavItemContainer className=\"user-nav-link\">\n        <UserName>{name ? name.toUpperCase() : \"\"}</UserName>\n        <Button\n          className={buttonStyle}\n          variant=\"outlined\"\n          onClick={onLogOutHeandler}\n        >\n          LOGOUT\n        </Button>\n      </NavItemContainer>\n    </NavBarContainer>\n  );\n}\n","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const NavBarContainer = styled.nav`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: static;\n  width: 100%;\n  height: 70px;\n`;\n\nexport const NavItemContainer = styled.div`\n  display: flex;\n  align-items: center;\n  &.home-nav-link {\n    margin-left: 150px;\n    margin-right: auto;\n  }\n  &.user-nav-link {\n    margin-right: 150px;\n    margin-left: auto;\n  }\n`;\n\nexport const NavBarLink = styled(NavLink)`\n  text-decoration: none;\n  color: #ffffff;\n  left: 0;\n  &:not(:last-child) {\n    margin-right: 50px;\n  }\n  &.active {\n    color: red;\n  }\n`;\n","import {\n  NavBarContainer,\n  NavItemContainer,\n  NavBarLink,\n} from \"views/PublicNavView/PublicNavView.style\";\n\nexport function PublicNavView() {\n  return (\n    <NavBarContainer>\n      <NavItemContainer className=\"home-nav-link\">\n        <NavBarLink to=\"/\" exact>\n          HOME\n        </NavBarLink>\n      </NavItemContainer>\n      <NavItemContainer className=\"user-nav-link\">\n        <NavBarLink to=\"/login\">LOGIN</NavBarLink>\n        <NavBarLink to=\"/registration\">SING UP</NavBarLink>\n      </NavItemContainer>\n    </NavBarContainer>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useNavStyle = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    backgroundColor: \"rgb(0, 0, 0)\",\n  },\n});\n","import { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { PrivatNavView } from \"views/PrivatNavView/PrivatNavView\";\nimport { PublicNavView } from \"views/PublicNavView/PublicNavView\";\n\nimport authSelectors from \"redux/slices/auth/auth-selectors\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { useNavStyle } from \"utils/styleHooks/navHooks\";\n\nexport function NavBar() {\n  const isloggedStatus = useSelector(authSelectors.isCurrentUser);\n  const [isPrivat, setIsPrivat] = useState(false);\n  const [isPublic, setIsPublic] = useState(false);\n  const { root, appBar } = useNavStyle();\n\n  useEffect(() => {\n    switch (isloggedStatus) {\n      case \"pending\":\n        setIsPrivat(false);\n        setIsPublic(false);\n        break;\n      case \"loaded\":\n        setIsPrivat(true);\n        setIsPublic(false);\n        break;\n      case \"rejected\":\n        setIsPrivat(false);\n        setIsPublic(true);\n        break;\n      case \"loggedOut\":\n        setIsPrivat(false);\n        setIsPublic(true);\n        break;\n      default:\n        break;\n    }\n  }, [isloggedStatus]);\n\n  return (\n    <div className={root}>\n      <AppBar position=\"static\" className={appBar}>\n        <Toolbar variant=\"dense\">\n          {isPrivat && <PrivatNavView />}\n          {isPublic && <PublicNavView />}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const LoginFormSection = styled.div`\n  &.login-main-container {\n    display: flex;\n    height: calc(100vh - 70px);\n    background-color: #212121;\n    padding-left: 150px;\n    padding-right: 150px;\n  }\n  &.login-input-container {\n    margin-top: 30px;\n  }\n  &.login-button-container {\n    margin-top: 30px;\n    margin-left: auto;\n    margin-right: 0;\n    width: fit-content;\n  }\n`;\n\nexport const LoginFormContainer = styled.form`\n  margin-left: auto;\n  margin-right: auto;\n  width: 500px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const AlertContainer = styled.div`\n  width: 500px;\n  text-align: center;\n  margin-top: 50px;\n`;\n\nexport const AlertMessageText = styled.p`\n  display: inline-block;\n  color: rgb(255, 0, 0);\n  margin: 0;\n`;\n","import {\n  AlertContainer,\n  AlertMessageText,\n} from \"views/AlertMessage/AllertMessage.style\";\n\nexport function AllertMessage({ message }) {\n  return (\n    <AlertContainer>\n      <AlertMessageText>\n        {message} ERROR! TRY AGAIN, BUT CAREFULLY 😈\n      </AlertMessageText>\n    </AlertContainer>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport authOperations from \"redux/slices/auth/auth-operations\";\nimport authSelectors from \"redux/slices/auth/auth-selectors\";\n\nimport {\n  LoginFormContainer,\n  LoginFormSection,\n} from \"components/LoginForm/LoginForm.style\";\nimport { AllertMessage } from \"views/AlertMessage/AllertMessage\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\n\nimport { costomTheme } from \"utils/themes/inputFormTheme\";\nimport { useButtonStyle } from \"utils/styleHooks/buttonsHook\";\nimport { BlackOut } from \"utils/BlackOut\";\n\nexport function LoginForm() {\n  const [emailInput, setEmailInput] = useState(\"\");\n  const [passwordInput, setPasswordInput] = useState(\"\");\n  const [isFadeOut, setIsFadeOut] = useState(true);\n  const [isLoadedPage, setIsLoadedPage] = useState(true);\n  const { submitButton } = useButtonStyle();\n  const isLogged = useSelector(authSelectors.loggedStatus);\n  const dispatch = useDispatch();\n\n  const onChangengeHeandler = ({ target }) => {\n    switch (target.name) {\n      case \"login\":\n        setEmailInput(target.value);\n        break;\n      case \"paswd\":\n        setPasswordInput(target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const onSubmitHeandler = (eve) => {\n    eve.preventDefault();\n    dispatch(\n      authOperations.logIn({\n        email: emailInput,\n        password: passwordInput,\n      })\n    );\n    setEmailInput(\"\");\n    setPasswordInput(\"\");\n  };\n\n  useEffect(() => {\n    if (isLoadedPage) {\n      setIsFadeOut(false);\n      let loadPage = setTimeout(() => {\n        setIsLoadedPage(false);\n      }, 1000);\n      return () => {\n        clearTimeout(loadPage);\n      };\n    }\n  }, [isLoadedPage]);\n\n  return (\n    <>\n      {isLoadedPage && (\n        <BlackOut\n          className={isFadeOut ? \"black-enter\" : \"black-enter unactive\"}\n        />\n      )}\n      <LoginFormSection className=\"login-main-container\">\n        <LoginFormContainer onSubmit={onSubmitHeandler}>\n          <LoginFormSection className=\"login-input-container\">\n            <ThemeProvider theme={costomTheme}>\n              <TextField\n                name=\"login\"\n                label=\"EXAMPLE@MAIL.COM\"\n                type=\"email\"\n                variant=\"outlined\"\n                value={emailInput}\n                onChange={onChangengeHeandler}\n                fullWidth\n              />\n            </ThemeProvider>\n          </LoginFormSection>\n          <LoginFormSection className=\"login-input-container\">\n            <ThemeProvider theme={costomTheme}>\n              <TextField\n                name=\"paswd\"\n                label=\"PASSWORD\"\n                type=\"password\"\n                variant=\"outlined\"\n                value={passwordInput}\n                onChange={onChangengeHeandler}\n                fullWidth\n              />\n            </ThemeProvider>\n          </LoginFormSection>\n          <LoginFormSection className=\"login-button-container\">\n            <Button type=\"submit\" className={submitButton} variant=\"outlined\">\n              LOGIN\n            </Button>\n          </LoginFormSection>\n          {isLogged === \"rejected\" && <AllertMessage message={\"LOGIN\"} />}\n        </LoginFormContainer>\n      </LoginFormSection>\n    </>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const RegFormContainer = styled.form`\n  margin-left: auto;\n  margin-right: auto;\n  width: 500px;\n`;\n\nexport const ReginFormSection = styled.div`\n  &.registration-main-container {\n    display: flex;\n    height: calc(100vh - 70px);\n    background-color: #212121;\n    padding-left: 150px;\n    padding-right: 150px;\n  }\n  &.registration-input-container {\n    margin-top: 30px;\n  }\n  &.registration-button-container {\n    margin-top: 30px;\n    margin-left: auto;\n    margin-right: 0;\n    width: fit-content;\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport authOperations from \"redux/slices/auth/auth-operations\";\nimport authSelectors from \"redux/slices/auth/auth-selectors\";\n\nimport {\n  RegFormContainer,\n  ReginFormSection,\n} from \"components/RegistrationForm/RegistrationForm.style\";\nimport { AllertMessage } from \"views/AlertMessage/AllertMessage\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\n\nimport { costomTheme } from \"utils/themes/inputFormTheme\";\nimport { useButtonStyle } from \"utils/styleHooks/buttonsHook\";\nimport { BlackOut } from \"utils/BlackOut\";\n\nexport function RegistrationForm() {\n  const [nameInput, setNameInput] = useState(\"\");\n  const [emailInput, setEmailInput] = useState(\"\");\n  const [passwordInput, setPasswordInput] = useState(\"\");\n  const [isFadeOut, setIsFadeOut] = useState(true);\n  const [isLoadedPage, setIsLoadedPage] = useState(true);\n  const { submitButton } = useButtonStyle();\n  const isLogged = useSelector(authSelectors.loggedStatus);\n  const dispatch = useDispatch();\n\n  const onChangengeHeandler = ({ target }) => {\n    switch (target.name) {\n      case \"name\":\n        setNameInput(target.value);\n        break;\n      case \"login\":\n        setEmailInput(target.value);\n        break;\n      case \"paswd\":\n        setPasswordInput(target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const onSubmitHeandler = (eve) => {\n    eve.preventDefault();\n    dispatch(\n      authOperations.register({\n        name: nameInput,\n        email: emailInput,\n        password: passwordInput,\n      })\n    );\n    setNameInput(\"\");\n    setEmailInput(\"\");\n    setPasswordInput(\"\");\n  };\n\n  useEffect(() => {\n    if (isLoadedPage) {\n      setIsFadeOut(false);\n      setTimeout(() => {\n        setIsLoadedPage(false);\n      }, 950);\n    }\n  }, [isLoadedPage]);\n\n  return (\n    <>\n      {isLoadedPage && (\n        <BlackOut\n          className={isFadeOut ? \"black-enter\" : \"black-enter unactive\"}\n        />\n      )}\n      <ReginFormSection className=\"registration-main-container\">\n        <RegFormContainer onSubmit={onSubmitHeandler}>\n          <ReginFormSection className=\"registration-input-container\">\n            <ThemeProvider theme={costomTheme}>\n              <TextField\n                name=\"name\"\n                label=\"NAME\"\n                type=\"name\"\n                variant=\"outlined\"\n                value={nameInput}\n                onChange={onChangengeHeandler}\n                fullWidth\n              />\n            </ThemeProvider>\n          </ReginFormSection>\n          <ReginFormSection className=\"registration-input-container\">\n            <ThemeProvider theme={costomTheme}>\n              <TextField\n                name=\"login\"\n                label=\"EXAMPLE@MAIL.COM\"\n                type=\"email\"\n                variant=\"outlined\"\n                value={emailInput}\n                onChange={onChangengeHeandler}\n                fullWidth\n              />\n            </ThemeProvider>\n          </ReginFormSection>\n          <ReginFormSection className=\"registration-input-container\">\n            <ThemeProvider theme={costomTheme}>\n              <TextField\n                name=\"paswd\"\n                label=\"PASSWORD\"\n                type=\"password\"\n                variant=\"outlined\"\n                value={passwordInput}\n                onChange={onChangengeHeandler}\n                fullWidth\n              />\n            </ThemeProvider>\n          </ReginFormSection>\n          <ReginFormSection className=\"registration-button-container\">\n            <Button type=\"submit\" className={submitButton} variant=\"outlined\">\n              REGISTRATION\n            </Button>\n          </ReginFormSection>\n          {isLogged === \"rejected\" && (\n            <AllertMessage message={\"REGISTRATION\"} />\n          )}\n        </RegFormContainer>\n      </ReginFormSection>\n    </>\n  );\n}\n","import { useEffect } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport authOperations from \"redux/slices/auth/auth-operations\";\n\nimport PrivateRoute from \"components/Rutes/PrivatRoute\";\nimport PublicRoute from \"components/Rutes/PublicRoute\";\n\nimport { Home } from \"components/Home/Home\";\nimport { Contacts } from \"components/Contacts/Contacts\";\nimport { NavBar } from \"components/NavBar/NavBar\";\nimport { LoginForm } from \"components/LoginForm/LoginForm\";\nimport { RegistrationForm } from \"components/RegistrationForm/RegistrationForm\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <NavBar />\n      <Switch>\n        <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n          <Contacts />\n        </PrivateRoute>\n\n        <PublicRoute exact path=\"/\" redirectTo=\"/contacts\" restricted>\n          <Home />\n        </PublicRoute>\n\n        <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\n          <LoginForm />\n        </PublicRoute>\n\n        <PublicRoute\n          exact\n          path=\"/registration\"\n          redirectTo=\"/contacts\"\n          restricted\n        >\n          <RegistrationForm />\n        </PublicRoute>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"redux/store/store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"@fontsource/roboto\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}